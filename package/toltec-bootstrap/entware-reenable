#!/usr/bin/env bash
# Path for the systemd unit that mounts Entware to /opt
systemd_opt_mount_path=/lib/systemd/system/opt.mount

# Path for the systemd unit that mounts /opt/share/zoneinfo to /usr/share/zoneinfo
systemd_timezone_mount_path=/lib/systemd/system/usr-share-zoneinfo.mount

# Path where the actual Entware distribution resides (will be mounted to /opt)
entware_path=/home/root/.entware

entware-mount() {
    mkdir -p /opt
    mkdir -p "$entware_path"

    # Create systemd mount unit to mount over /opt on reboot
    cat > "$systemd_opt_mount_path" << UNIT
[Unit]
Description=Bind mount Entware over /opt
DefaultDependencies=no
Conflicts=umount.target
Before=local-fs.target umount.target

[Mount]
What=/home/root/.entware
Where=/opt
Type=none
Options=bind

[Install]
WantedBy=local-fs.target
UNIT

    systemctl daemon-reload
    systemctl enable --now "$(basename "$systemd_opt_mount_path")" 2> /dev/null
}

# Mount /opt/share/zoneinfo to /usr/share/zoneinfo
timezone-mount() {
    mkdir -p "$entware_path"/share/zoneinfo

    # Create systemd mount unit to mount over /opt on reboot
    cat > "$systemd_timezone_mount_path" << UNIT
[Unit]
Description=Bind mount /opt/share/zoneinfo over /usr/share/zoneinfo
DefaultDependencies=no
Conflicts=umount.target
Before=local-fs.target umount.target

[Mount]
What=/home/root/.entware/share/zoneinfo
Where=/usr/share/zoneinfo
Type=none
Options=bind

[Install]
WantedBy=local-fs.target
UNIT

    systemctl daemon-reload
    systemctl enable --now "$(basename "$systemd_timezone_mount_path")" 2> /dev/null
}

reinstall-root() {
    opkg update
    # Get the list of installed packages with files on root
    packages=$(opkg list-installed | while read -r inst_line; do
        pkg=$(echo "$inst_line" | awk '{ print $1 }')
        pkg_ver=$(echo "$inst_line" | awk '{ print $3 }')
        opkg files "$pkg" | grep -v /opt | grep -v "is installed on root" | grep -v /home/root > /dev/null && echo "$pkg $pkg_ver"
    done)
    # Get the list of packages that can be installed
    available_packages=$(gunzip -c /opt/var/opkg-lists/* | grep -E '(Package:)|(Version:)' | sed 's|Package: ||' | tr '\n' ' ' | sed -r 's| Version: ([^ ]+) | \1\n|g' | sort | uniq)
    # Reinstall all packages that have files on root that are available to install
    # shellcheck disable=SC2145
    echo -e "${packages[@]}\n${available_packages[@]}" | sed 's/ /\0/g' | sort | uniq -d | awk '{print $1}' | xargs -r opkg install --force-reinstall
}

main() {
    entware-mount
    timezone-mount
    reinstall-root
}

main
